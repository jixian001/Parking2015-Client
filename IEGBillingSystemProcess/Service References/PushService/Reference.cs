//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace IEGBillingSystemProcess.PushService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnmFaultType", Namespace="http://schemas.datacontract.org/2004/07/TypedefLib")]
    public enum EnmFaultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fail = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exception = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Null = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wait = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAvailable = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAutomatic = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAllowed = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotMatch = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailConnection = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToInsert = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToUpdate = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToQuery = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToDelete = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameError = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameExist = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordError = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordNull = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPRTypeNull = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PWNotMatch = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LogicCardID = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PhysicalCardID = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoICCardInfo = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HasICCardInfo = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ICCardIDNotAllowed = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModifyICCardID = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToWriteICCard = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToReadICCard = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCustomerInfo = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarInGarage = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoCarInGarage = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskOnICCard = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BoundUser = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LossORCancel = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoBoundCustomer = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundEquip = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EquipIncorrect = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HallEquip = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HallEnter = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HallExit = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HallEnterorExit = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotHallEquip = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotETVEquip = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSameWareHouse = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotNormalCarPOSN = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundCarPOSN = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FixedCarPOSN = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFixedCarPOSN = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToSendTelegram = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoTariffInfo = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToFixBill = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverCarInSize = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidEquipID = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidWareHouseID = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidFeeType = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkQueueNotEmpty = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FailToAllocETVorTV = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HallNotCar = 59,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CCarLocationDto", Namespace="http://schemas.datacontract.org/2004/07/DatabaseManagementLib")]
    [System.SerializableAttribute()]
    public partial class CCarLocationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carlocaddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> warehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carlocsideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carloccolumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carloclayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carlocstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carloctypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carlocsizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iccodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carwheelbaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carsizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isbackupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> carintimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> priorityidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> regionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carpictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> directionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> overallLgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> overhangField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> carweightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> offcenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> rearwheeldisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string carlocaddr {
            get {
                return this.carlocaddrField;
            }
            set {
                if ((object.ReferenceEquals(this.carlocaddrField, value) != true)) {
                    this.carlocaddrField = value;
                    this.RaisePropertyChanged("carlocaddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> warehouse {
            get {
                return this.warehouseField;
            }
            set {
                if ((this.warehouseField.Equals(value) != true)) {
                    this.warehouseField = value;
                    this.RaisePropertyChanged("warehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> carlocside {
            get {
                return this.carlocsideField;
            }
            set {
                if ((this.carlocsideField.Equals(value) != true)) {
                    this.carlocsideField = value;
                    this.RaisePropertyChanged("carlocside");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> carloccolumn {
            get {
                return this.carloccolumnField;
            }
            set {
                if ((this.carloccolumnField.Equals(value) != true)) {
                    this.carloccolumnField = value;
                    this.RaisePropertyChanged("carloccolumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> carloclayer {
            get {
                return this.carloclayerField;
            }
            set {
                if ((this.carloclayerField.Equals(value) != true)) {
                    this.carloclayerField = value;
                    this.RaisePropertyChanged("carloclayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> carlocstatus {
            get {
                return this.carlocstatusField;
            }
            set {
                if ((this.carlocstatusField.Equals(value) != true)) {
                    this.carlocstatusField = value;
                    this.RaisePropertyChanged("carlocstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public System.Nullable<int> carloctype {
            get {
                return this.carloctypeField;
            }
            set {
                if ((this.carloctypeField.Equals(value) != true)) {
                    this.carloctypeField = value;
                    this.RaisePropertyChanged("carloctype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string carlocsize {
            get {
                return this.carlocsizeField;
            }
            set {
                if ((object.ReferenceEquals(this.carlocsizeField, value) != true)) {
                    this.carlocsizeField = value;
                    this.RaisePropertyChanged("carlocsize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string iccode {
            get {
                return this.iccodeField;
            }
            set {
                if ((object.ReferenceEquals(this.iccodeField, value) != true)) {
                    this.iccodeField = value;
                    this.RaisePropertyChanged("iccode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> carwheelbase {
            get {
                return this.carwheelbaseField;
            }
            set {
                if ((this.carwheelbaseField.Equals(value) != true)) {
                    this.carwheelbaseField = value;
                    this.RaisePropertyChanged("carwheelbase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string carsize {
            get {
                return this.carsizeField;
            }
            set {
                if ((object.ReferenceEquals(this.carsizeField, value) != true)) {
                    this.carsizeField = value;
                    this.RaisePropertyChanged("carsize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public System.Nullable<int> isbackup {
            get {
                return this.isbackupField;
            }
            set {
                if ((this.isbackupField.Equals(value) != true)) {
                    this.isbackupField = value;
                    this.RaisePropertyChanged("isbackup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.Nullable<System.DateTime> carintime {
            get {
                return this.carintimeField;
            }
            set {
                if ((this.carintimeField.Equals(value) != true)) {
                    this.carintimeField = value;
                    this.RaisePropertyChanged("carintime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.Nullable<int> priorityid {
            get {
                return this.priorityidField;
            }
            set {
                if ((this.priorityidField.Equals(value) != true)) {
                    this.priorityidField = value;
                    this.RaisePropertyChanged("priorityid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public System.Nullable<int> region {
            get {
                return this.regionField;
            }
            set {
                if ((this.regionField.Equals(value) != true)) {
                    this.regionField = value;
                    this.RaisePropertyChanged("region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string carnumber {
            get {
                return this.carnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.carnumberField, value) != true)) {
                    this.carnumberField = value;
                    this.RaisePropertyChanged("carnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string carpicture {
            get {
                return this.carpictureField;
            }
            set {
                if ((object.ReferenceEquals(this.carpictureField, value) != true)) {
                    this.carpictureField = value;
                    this.RaisePropertyChanged("carpicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.Nullable<int> direction {
            get {
                return this.directionField;
            }
            set {
                if ((this.directionField.Equals(value) != true)) {
                    this.directionField = value;
                    this.RaisePropertyChanged("direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public System.Nullable<int> overallLg {
            get {
                return this.overallLgField;
            }
            set {
                if ((this.overallLgField.Equals(value) != true)) {
                    this.overallLgField = value;
                    this.RaisePropertyChanged("overallLg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.Nullable<int> overhang {
            get {
                return this.overhangField;
            }
            set {
                if ((this.overhangField.Equals(value) != true)) {
                    this.overhangField = value;
                    this.RaisePropertyChanged("overhang");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public System.Nullable<int> carweight {
            get {
                return this.carweightField;
            }
            set {
                if ((this.carweightField.Equals(value) != true)) {
                    this.carweightField = value;
                    this.RaisePropertyChanged("carweight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public System.Nullable<int> offcenter {
            get {
                return this.offcenterField;
            }
            set {
                if ((this.offcenterField.Equals(value) != true)) {
                    this.offcenterField = value;
                    this.RaisePropertyChanged("offcenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public System.Nullable<int> rearwheeldis {
            get {
                return this.rearwheeldisField;
            }
            set {
                if ((this.rearwheeldisField.Equals(value) != true)) {
                    this.rearwheeldisField = value;
                    this.RaisePropertyChanged("rearwheeldis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnmLocationType", Namespace="http://schemas.datacontract.org/2004/07/TypedefLib")]
    public enum EnmLocationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Init = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hall = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disable = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETV = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Temp = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DisTemp = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnmLocationStatus", Namespace="http://schemas.datacontract.org/2004/07/TypedefLib")]
    public enum EnmLocationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Init = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Space = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Occupy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Entering = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Outing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TmpFetch = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MovingVEH = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VehRotation = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnmHallType", Namespace="http://schemas.datacontract.org/2004/07/TypedefLib")]
    public enum EnmHallType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Entance = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Exit = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EnterOrExit = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDeviceStatusDto", Namespace="http://schemas.datacontract.org/2004/07/DatabaseManagementLib")]
    [System.SerializableAttribute()]
    public partial class CDeviceStatusDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int warehouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int devicecodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> tasktypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isavailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> devicemodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deviceaddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> devicetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> halltypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> regionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isgetoutcarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string iccodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> instepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> outstepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> runstepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> warehousechangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> devicelayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> prevnodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> currentnodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> queueprevnodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> queuecurrentnodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string scrlocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descclocField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int warehouse {
            get {
                return this.warehouseField;
            }
            set {
                if ((this.warehouseField.Equals(value) != true)) {
                    this.warehouseField = value;
                    this.RaisePropertyChanged("warehouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int devicecode {
            get {
                return this.devicecodeField;
            }
            set {
                if ((this.devicecodeField.Equals(value) != true)) {
                    this.devicecodeField = value;
                    this.RaisePropertyChanged("devicecode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> tasktype {
            get {
                return this.tasktypeField;
            }
            set {
                if ((this.tasktypeField.Equals(value) != true)) {
                    this.tasktypeField = value;
                    this.RaisePropertyChanged("tasktype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> isable {
            get {
                return this.isableField;
            }
            set {
                if ((this.isableField.Equals(value) != true)) {
                    this.isableField = value;
                    this.RaisePropertyChanged("isable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> isavailable {
            get {
                return this.isavailableField;
            }
            set {
                if ((this.isavailableField.Equals(value) != true)) {
                    this.isavailableField = value;
                    this.RaisePropertyChanged("isavailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> devicemode {
            get {
                return this.devicemodeField;
            }
            set {
                if ((this.devicemodeField.Equals(value) != true)) {
                    this.devicemodeField = value;
                    this.RaisePropertyChanged("devicemode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string deviceaddr {
            get {
                return this.deviceaddrField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceaddrField, value) != true)) {
                    this.deviceaddrField = value;
                    this.RaisePropertyChanged("deviceaddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Nullable<int> devicetype {
            get {
                return this.devicetypeField;
            }
            set {
                if ((this.devicetypeField.Equals(value) != true)) {
                    this.devicetypeField = value;
                    this.RaisePropertyChanged("devicetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public System.Nullable<int> halltype {
            get {
                return this.halltypeField;
            }
            set {
                if ((this.halltypeField.Equals(value) != true)) {
                    this.halltypeField = value;
                    this.RaisePropertyChanged("halltype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Nullable<int> region {
            get {
                return this.regionField;
            }
            set {
                if ((this.regionField.Equals(value) != true)) {
                    this.regionField = value;
                    this.RaisePropertyChanged("region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public System.Nullable<int> isgetoutcar {
            get {
                return this.isgetoutcarField;
            }
            set {
                if ((this.isgetoutcarField.Equals(value) != true)) {
                    this.isgetoutcarField = value;
                    this.RaisePropertyChanged("isgetoutcar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string iccode {
            get {
                return this.iccodeField;
            }
            set {
                if ((object.ReferenceEquals(this.iccodeField, value) != true)) {
                    this.iccodeField = value;
                    this.RaisePropertyChanged("iccode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.Nullable<int> instep {
            get {
                return this.instepField;
            }
            set {
                if ((this.instepField.Equals(value) != true)) {
                    this.instepField = value;
                    this.RaisePropertyChanged("instep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public System.Nullable<int> outstep {
            get {
                return this.outstepField;
            }
            set {
                if ((this.outstepField.Equals(value) != true)) {
                    this.outstepField = value;
                    this.RaisePropertyChanged("outstep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public System.Nullable<int> runstep {
            get {
                return this.runstepField;
            }
            set {
                if ((this.runstepField.Equals(value) != true)) {
                    this.runstepField = value;
                    this.RaisePropertyChanged("runstep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public System.Nullable<int> warehousechange {
            get {
                return this.warehousechangeField;
            }
            set {
                if ((this.warehousechangeField.Equals(value) != true)) {
                    this.warehousechangeField = value;
                    this.RaisePropertyChanged("warehousechange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public System.Nullable<int> devicelayer {
            get {
                return this.devicelayerField;
            }
            set {
                if ((this.devicelayerField.Equals(value) != true)) {
                    this.devicelayerField = value;
                    this.RaisePropertyChanged("devicelayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public System.Nullable<int> prevnode {
            get {
                return this.prevnodeField;
            }
            set {
                if ((this.prevnodeField.Equals(value) != true)) {
                    this.prevnodeField = value;
                    this.RaisePropertyChanged("prevnode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public System.Nullable<int> currentnode {
            get {
                return this.currentnodeField;
            }
            set {
                if ((this.currentnodeField.Equals(value) != true)) {
                    this.currentnodeField = value;
                    this.RaisePropertyChanged("currentnode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.Nullable<int> queueprevnode {
            get {
                return this.queueprevnodeField;
            }
            set {
                if ((this.queueprevnodeField.Equals(value) != true)) {
                    this.queueprevnodeField = value;
                    this.RaisePropertyChanged("queueprevnode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public System.Nullable<int> queuecurrentnode {
            get {
                return this.queuecurrentnodeField;
            }
            set {
                if ((this.queuecurrentnodeField.Equals(value) != true)) {
                    this.queuecurrentnodeField = value;
                    this.RaisePropertyChanged("queuecurrentnode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public string scrloc {
            get {
                return this.scrlocField;
            }
            set {
                if ((object.ReferenceEquals(this.scrlocField, value) != true)) {
                    this.scrlocField = value;
                    this.RaisePropertyChanged("scrloc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public string desccloc {
            get {
                return this.descclocField;
            }
            set {
                if ((object.ReferenceEquals(this.descclocField, value) != true)) {
                    this.descclocField = value;
                    this.RaisePropertyChanged("desccloc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CDeviceFaultDto", Namespace="http://schemas.datacontract.org/2004/07/DatabaseManagementLib")]
    [System.SerializableAttribute()]
    public partial class CDeviceFaultDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string faultdescpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> faultaddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> isableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> devicecodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> warehouseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string faultdescp {
            get {
                return this.faultdescpField;
            }
            set {
                if ((object.ReferenceEquals(this.faultdescpField, value) != true)) {
                    this.faultdescpField = value;
                    this.RaisePropertyChanged("faultdescp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> faultaddress {
            get {
                return this.faultaddressField;
            }
            set {
                if ((this.faultaddressField.Equals(value) != true)) {
                    this.faultaddressField = value;
                    this.RaisePropertyChanged("faultaddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> color {
            get {
                return this.colorField;
            }
            set {
                if ((this.colorField.Equals(value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<int> isable {
            get {
                return this.isableField;
            }
            set {
                if ((this.isableField.Equals(value) != true)) {
                    this.isableField = value;
                    this.RaisePropertyChanged("isable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.Nullable<int> devicecode {
            get {
                return this.devicecodeField;
            }
            set {
                if ((this.devicecodeField.Equals(value) != true)) {
                    this.devicecodeField = value;
                    this.RaisePropertyChanged("devicecode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Nullable<int> warehouse {
            get {
                return this.warehouseField;
            }
            set {
                if ((this.warehouseField.Equals(value) != true)) {
                    this.warehouseField = value;
                    this.RaisePropertyChanged("warehouse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="struBillInfo", Namespace="http://schemas.datacontract.org/2004/07/TypedefLib")]
    [System.SerializableAttribute()]
    public partial struct struBillInfo : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dtEndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dtStartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float fActualFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float fPayableFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float fTariffNormField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nFeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nHallIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nICCardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nTariffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nWareHouseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCalculateDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strICCardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strOptCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtEndTime {
            get {
                return this.dtEndTimeField;
            }
            set {
                if ((this.dtEndTimeField.Equals(value) != true)) {
                    this.dtEndTimeField = value;
                    this.RaisePropertyChanged("dtEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtStartTime {
            get {
                return this.dtStartTimeField;
            }
            set {
                if ((this.dtStartTimeField.Equals(value) != true)) {
                    this.dtStartTimeField = value;
                    this.RaisePropertyChanged("dtStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float fActualFee {
            get {
                return this.fActualFeeField;
            }
            set {
                if ((this.fActualFeeField.Equals(value) != true)) {
                    this.fActualFeeField = value;
                    this.RaisePropertyChanged("fActualFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float fPayableFee {
            get {
                return this.fPayableFeeField;
            }
            set {
                if ((this.fPayableFeeField.Equals(value) != true)) {
                    this.fPayableFeeField = value;
                    this.RaisePropertyChanged("fPayableFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float fTariffNorm {
            get {
                return this.fTariffNormField;
            }
            set {
                if ((this.fTariffNormField.Equals(value) != true)) {
                    this.fTariffNormField = value;
                    this.RaisePropertyChanged("fTariffNorm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nFeeType {
            get {
                return this.nFeeTypeField;
            }
            set {
                if ((this.nFeeTypeField.Equals(value) != true)) {
                    this.nFeeTypeField = value;
                    this.RaisePropertyChanged("nFeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nHallID {
            get {
                return this.nHallIDField;
            }
            set {
                if ((this.nHallIDField.Equals(value) != true)) {
                    this.nHallIDField = value;
                    this.RaisePropertyChanged("nHallID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nICCardType {
            get {
                return this.nICCardTypeField;
            }
            set {
                if ((this.nICCardTypeField.Equals(value) != true)) {
                    this.nICCardTypeField = value;
                    this.RaisePropertyChanged("nICCardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nTariffID {
            get {
                return this.nTariffIDField;
            }
            set {
                if ((this.nTariffIDField.Equals(value) != true)) {
                    this.nTariffIDField = value;
                    this.RaisePropertyChanged("nTariffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nWareHouse {
            get {
                return this.nWareHouseField;
            }
            set {
                if ((this.nWareHouseField.Equals(value) != true)) {
                    this.nWareHouseField = value;
                    this.RaisePropertyChanged("nWareHouse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCalculateDays {
            get {
                return this.strCalculateDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.strCalculateDaysField, value) != true)) {
                    this.strCalculateDaysField = value;
                    this.RaisePropertyChanged("strCalculateDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strICCardID {
            get {
                return this.strICCardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.strICCardIDField, value) != true)) {
                    this.strICCardIDField = value;
                    this.RaisePropertyChanged("strICCardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strOptCode {
            get {
                return this.strOptCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.strOptCodeField, value) != true)) {
                    this.strOptCodeField = value;
                    this.RaisePropertyChanged("strOptCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PushService.IPushService", CallbackContract=typeof(IEGBillingSystemProcess.PushService.IPushServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPushService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPushService/Register")]
        void Register(string strHost);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPushService/Dispose")]
        void Dispose();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/CheckService", ReplyAction="http://tempuri.org/IPushService/CheckServiceResponse")]
        bool CheckService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyICCardID", ReplyAction="http://tempuri.org/IPushService/ModifyICCardIDResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyICCardID(string strPhysicalCardID, string strData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyICCard", ReplyAction="http://tempuri.org/IPushService/ModifyICCardResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyICCard(string strOldICCardID, string strNewICCardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyPhyCard", ReplyAction="http://tempuri.org/IPushService/ModifyPhyCardResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyPhyCard(string strPhysicalCardID, string strICCardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ManualVEHExit", ReplyAction="http://tempuri.org/IPushService/ManualVEHExitResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ManualVEHExit(int nWareHouse, string strCarPOSNAddr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ManualVEHEntry", ReplyAction="http://tempuri.org/IPushService/ManualVEHEntryResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ManualVEHEntry(IEGBillingSystemProcess.PushService.CCarLocationDto carPOSNTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ManualMoveVEH", ReplyAction="http://tempuri.org/IPushService/ManualMoveVEHResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ManualMoveVEH(int nWareHouse, string strSrcCarPOSNAddr, string strDestCarPOSNAddr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyCarPOSNType", ReplyAction="http://tempuri.org/IPushService/ModifyCarPOSNTypeResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyCarPOSNType(int nWareHouse, string strCarPOSNAddr, IEGBillingSystemProcess.PushService.EnmLocationType enmCarPOSNType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/InitAllCarPOSN", ReplyAction="http://tempuri.org/IPushService/InitAllCarPOSNResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType InitAllCarPOSN(int nWareHouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyAllCarPOSNType", ReplyAction="http://tempuri.org/IPushService/ModifyAllCarPOSNTypeResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyAllCarPOSNType(int nWareHouse, IEGBillingSystemProcess.PushService.EnmLocationType enmCarPOSNType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/ModifyCarPOSNStatus", ReplyAction="http://tempuri.org/IPushService/ModifyCarPOSNStatusResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType ModifyCarPOSNStatus(int nWareHouse, string strCarPOSNAddr, IEGBillingSystemProcess.PushService.EnmLocationStatus enmCarPOSNStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/SetDeviceMode", ReplyAction="http://tempuri.org/IPushService/SetDeviceModeResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType SetDeviceMode(int nWareHouse, int nDeviceID, int nIsavailable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/SetHallType", ReplyAction="http://tempuri.org/IPushService/SetHallTypeResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType SetHallType(int nWareHouse, int nHallID, IEGBillingSystemProcess.PushService.EnmHallType enmHallType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/IsHasTask", ReplyAction="http://tempuri.org/IPushService/IsHasTaskResponse")]
        bool IsHasTask(int nWareHouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/TmpFetch", ReplyAction="http://tempuri.org/IPushService/TmpFetchResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType TmpFetch(string strICCardID, int nWareHouse, int nHallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleExit", ReplyAction="http://tempuri.org/IPushService/VehicleExitResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleExit(int nWareHouse, string strSrcPOSN, string strHallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleExitForBilling", ReplyAction="http://tempuri.org/IPushService/VehicleExitForBillingResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleExitForBilling(string strICCardID, int nHallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleMove", ReplyAction="http://tempuri.org/IPushService/VehicleMoveResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleMove(int nWareHouse, string strSrcPOSN, string strDestPOSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/EquipMove", ReplyAction="http://tempuri.org/IPushService/EquipMoveResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType EquipMove(int nWareHouse, int nEquipID, string strDestPOSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/StartWorkQueue", ReplyAction="http://tempuri.org/IPushService/StartWorkQueueResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType StartWorkQueue(IEGBillingSystemProcess.PushService.CDeviceStatusDto deviceStatusTBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleExitSubscribe", ReplyAction="http://tempuri.org/IPushService/VehicleExitSubscribeResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleExitSubscribe(string strICCardID, int nWareHouse, ref int nHallID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleRotation", ReplyAction="http://tempuri.org/IPushService/VehicleRotationResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleRotation(int nWareHouse);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/VehicleRotationByAddr", ReplyAction="http://tempuri.org/IPushService/VehicleRotationByAddrResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType VehicleRotationByAddr(int nWareHouse, string strCarPOSN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/HandCompleteTask", ReplyAction="http://tempuri.org/IPushService/HandCompleteTaskResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType HandCompleteTask(int warehouse, int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/HandResetTask", ReplyAction="http://tempuri.org/IPushService/HandResetTaskResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType HandResetTask(int warehouse, int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/InitDeviceFault", ReplyAction="http://tempuri.org/IPushService/InitDeviceFaultResponse")]
        void InitDeviceFault(IEGBillingSystemProcess.PushService.CDeviceFaultDto deviceFaultTBL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/MuroDeviceTask", ReplyAction="http://tempuri.org/IPushService/MuroDeviceTaskResponse")]
        int MuroDeviceTask(int warehouse, int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPushService/PayFeesAndTakeCar", ReplyAction="http://tempuri.org/IPushService/PayFeesAndTakeCarResponse")]
        IEGBillingSystemProcess.PushService.EnmFaultType PayFeesAndTakeCar(IEGBillingSystemProcess.PushService.struBillInfo billInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPushServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPushService/Push")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.CDeviceStatusDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.CDeviceFaultDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.CCarLocationDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.EnmFaultType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.EnmLocationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.EnmLocationStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.EnmHallType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(IEGBillingSystemProcess.PushService.struBillInfo))]
        void Push(object objTable);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPushServiceChannel : IEGBillingSystemProcess.PushService.IPushService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PushServiceClient : System.ServiceModel.DuplexClientBase<IEGBillingSystemProcess.PushService.IPushService>, IEGBillingSystemProcess.PushService.IPushService {
        
        public PushServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PushServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PushServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PushServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PushServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Register(string strHost) {
            base.Channel.Register(strHost);
        }
        
        public void Dispose() {
            base.Channel.Dispose();
        }
        
        public bool CheckService() {
            return base.Channel.CheckService();
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyICCardID(string strPhysicalCardID, string strData) {
            return base.Channel.ModifyICCardID(strPhysicalCardID, strData);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyICCard(string strOldICCardID, string strNewICCardID) {
            return base.Channel.ModifyICCard(strOldICCardID, strNewICCardID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyPhyCard(string strPhysicalCardID, string strICCardID) {
            return base.Channel.ModifyPhyCard(strPhysicalCardID, strICCardID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ManualVEHExit(int nWareHouse, string strCarPOSNAddr) {
            return base.Channel.ManualVEHExit(nWareHouse, strCarPOSNAddr);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ManualVEHEntry(IEGBillingSystemProcess.PushService.CCarLocationDto carPOSNTable) {
            return base.Channel.ManualVEHEntry(carPOSNTable);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ManualMoveVEH(int nWareHouse, string strSrcCarPOSNAddr, string strDestCarPOSNAddr) {
            return base.Channel.ManualMoveVEH(nWareHouse, strSrcCarPOSNAddr, strDestCarPOSNAddr);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyCarPOSNType(int nWareHouse, string strCarPOSNAddr, IEGBillingSystemProcess.PushService.EnmLocationType enmCarPOSNType) {
            return base.Channel.ModifyCarPOSNType(nWareHouse, strCarPOSNAddr, enmCarPOSNType);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType InitAllCarPOSN(int nWareHouse) {
            return base.Channel.InitAllCarPOSN(nWareHouse);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyAllCarPOSNType(int nWareHouse, IEGBillingSystemProcess.PushService.EnmLocationType enmCarPOSNType) {
            return base.Channel.ModifyAllCarPOSNType(nWareHouse, enmCarPOSNType);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType ModifyCarPOSNStatus(int nWareHouse, string strCarPOSNAddr, IEGBillingSystemProcess.PushService.EnmLocationStatus enmCarPOSNStatus) {
            return base.Channel.ModifyCarPOSNStatus(nWareHouse, strCarPOSNAddr, enmCarPOSNStatus);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType SetDeviceMode(int nWareHouse, int nDeviceID, int nIsavailable) {
            return base.Channel.SetDeviceMode(nWareHouse, nDeviceID, nIsavailable);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType SetHallType(int nWareHouse, int nHallID, IEGBillingSystemProcess.PushService.EnmHallType enmHallType) {
            return base.Channel.SetHallType(nWareHouse, nHallID, enmHallType);
        }
        
        public bool IsHasTask(int nWareHouse) {
            return base.Channel.IsHasTask(nWareHouse);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType TmpFetch(string strICCardID, int nWareHouse, int nHallID) {
            return base.Channel.TmpFetch(strICCardID, nWareHouse, nHallID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleExit(int nWareHouse, string strSrcPOSN, string strHallID) {
            return base.Channel.VehicleExit(nWareHouse, strSrcPOSN, strHallID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleExitForBilling(string strICCardID, int nHallID) {
            return base.Channel.VehicleExitForBilling(strICCardID, nHallID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleMove(int nWareHouse, string strSrcPOSN, string strDestPOSN) {
            return base.Channel.VehicleMove(nWareHouse, strSrcPOSN, strDestPOSN);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType EquipMove(int nWareHouse, int nEquipID, string strDestPOSN) {
            return base.Channel.EquipMove(nWareHouse, nEquipID, strDestPOSN);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType StartWorkQueue(IEGBillingSystemProcess.PushService.CDeviceStatusDto deviceStatusTBL) {
            return base.Channel.StartWorkQueue(deviceStatusTBL);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleExitSubscribe(string strICCardID, int nWareHouse, ref int nHallID) {
            return base.Channel.VehicleExitSubscribe(strICCardID, nWareHouse, ref nHallID);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleRotation(int nWareHouse) {
            return base.Channel.VehicleRotation(nWareHouse);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType VehicleRotationByAddr(int nWareHouse, string strCarPOSN) {
            return base.Channel.VehicleRotationByAddr(nWareHouse, strCarPOSN);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType HandCompleteTask(int warehouse, int code) {
            return base.Channel.HandCompleteTask(warehouse, code);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType HandResetTask(int warehouse, int code) {
            return base.Channel.HandResetTask(warehouse, code);
        }
        
        public void InitDeviceFault(IEGBillingSystemProcess.PushService.CDeviceFaultDto deviceFaultTBL) {
            base.Channel.InitDeviceFault(deviceFaultTBL);
        }
        
        public int MuroDeviceTask(int warehouse, int code) {
            return base.Channel.MuroDeviceTask(warehouse, code);
        }
        
        public IEGBillingSystemProcess.PushService.EnmFaultType PayFeesAndTakeCar(IEGBillingSystemProcess.PushService.struBillInfo billInfo) {
            return base.Channel.PayFeesAndTakeCar(billInfo);
        }
    }
}
